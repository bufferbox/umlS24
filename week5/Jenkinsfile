// week5 example uses Jenkin's "scripted" syntax, as opposed to its "declarative" syntax
// see: https://www.jenkins.io/doc/book/pipeline/syntax/#scripted-pipeline
// Defines a Kubernetes pod template that can be used to create nodes.
podTemplate(containers: [
    containerTemplate(
        name: 'gradle', image: 'gradle:6.3-jdk14', command: 'sleep', args: '30d'
    ),
]) {
    node(POD_LABEL) {
        stage('Run pipeline against a gradle project') {
            // "container" Selects a container of the agent pod so that all shell steps are
            // executed in that container.
            container('gradle') {
                stage('Build a gradle project') {
                    // from the git plugin
                    // https://www.jenkins.io/doc/pipeline/steps/git/
                    git url:
                        'https://github.com/bufferbox/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git'
                    sh '''
                    chmod +x gradlew
                    ./gradlew test 
                    '''
                }


                //code coverage only for main
                stage("Code coverage") {
                    try {
                    sh '''
                      pwd
                      ./gradlew jacocoTestCoverageVerification
                      ./gradlew jacocoTestReport 
                     '''
                    } catch (Exception E) {
                        echo 'Failure detected'
                    }

                }
                
                //all other tests for other branches
                stage('Run pipeline against a gradle project - all other branches') {
                      when {
                        not { branch 'main' }
                      }
                      steps {
                          //run unit test
                         echo 'Unit test not main branch'
                         sh """
                           cd Chapter08/sample1; 
                           ./gradlew test
                         """
                      }

                    //run checkstyle
                        try {
                        sh '''
                           pwd
                           ./gradlew checkstyleMain
                         '''
                        } catch (Exception E) {
                            echo 'Failure detected'
                        }
                        // from the HTML publisher plugin
                        // https://www.jenkins.io/doc/pipeline/steps/htmlpublisher/
                        publishHTML(target: [
                            reportDir: 'build/reports/checkstyle',
                            reportFiles: 'main.html',
                            reportName: "Checkstyle Report"
                        ])
                    
                    }
                
                // stage("Checkstyle") {
                    

                // }
            }
        }
    }
}
